server {
  listen 80;
  server_name www.test.com;
  root /app/;

  # need prerender
  if ($prerender = 1) {
    rewrite (.*) /prerenderio last;
  }

  # robots.txt
  if ($server_name ~* test\.com$) {
    rewrite /robots.txt /www.test.com.robots.txt break;
  }

  # do prerender
  location /prerenderio {
    if ($prerender = 0) {
      return 404;
    }

    # proxy_set_header X-Prerender-Token YOUR_TOKEN;

    proxy_hide_header Cache-Control;
    add_header Cache-Control "private,max-age=600,must-revalidate";

    #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
    resolver 8.8.8.8 8.8.4.4;
    set $prerender_host "prerender.io";
    proxy_pass https://$prerender_host;
    rewrite .* /$scheme://$host$request_uri? break;
  }

  # static files
  location  ~* \.(js|css|jpg|jpeg|png|gif|ico|svg|eot|woff|woff2|ttf|swf|mp3|mp4|wov|avi|flv|ogg|mpeg4|webm)$ {
    add_header Cache-Control "public, max-age=31536000";
    expires 365d;
  }

  # default
  location / {
    try_files $uri $uri/ /index.html;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    expires 0;
  }
}

server {
  listen 80 default_server;
  server_name _;
  root /app/;

  # test env disallow robots
  rewrite /robots.txt /robots-disallow.txt break;

  location ~* \.(js|css|jpg|jpeg|png|gif|ico|svg|eot|woff|woff2|ttf|swf|mp3|mp4|wov|avi|flv|ogg|mpeg4|webm)$ {
    add_header Cache-Control "public, max-age=31536000";
    expires 365d;
  }

  # default
  location / {
    try_files $uri $uri/ /index.html;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    expires 0;
  }
}